{% extends 'baseBack.html.twig' %}

{% block title %}Stat{% endblock %}

{% block body %}
<h1 style="text-align: center;">statistique des interets</h1>
    <div style="display: flex; justify-content: center;">
        <canvas id="pieChart" width="400" height="400" style="margin: 0 auto;"></canvas>
    </div>
    
    <div style="text-align: center; margin-top: 20px;">
        <h1>Nombre total d'Utilisateurs: {{ totalUsers }}</h1>
         <p>Les Utilisateurs verifi√©s: {{ verifiedUsers }}</p>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var ctx = document.getElementById('pieChart').getContext('2d');
        var rolesCount = {{ rolesCount|json_encode|raw }};
        
        var labels = [];
        var data = [];
        var totalUsers = 0;

        rolesCount.forEach(function(role) {
            labels.push(role.roles);
            data.push(role.userCount);
            totalUsers += role.userCount;
        });

        var myPieChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: labels,
                datasets: [{
                    data: data,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.7)',
                        'rgba(54, 162, 235, 0.7)',
                        'rgba(255, 206, 86, 0.7)',
                        'rgba(75, 192, 192, 0.7)',
                        'rgba(153, 102, 255, 0.7)',
                        'rgba(255, 159, 64, 0.7)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: false,
                maintainAspectRatio: false,
                legend: {
                    display: true,
                    position: 'right'
                },
                tooltips: {
                    callbacks: {
                        label: function(tooltipItem, data) {
                            var dataset = data.datasets[tooltipItem.datasetIndex];
                            var currentValue = dataset.data[tooltipItem.index];
                            var total = dataset.data.reduce(function(previousValue, currentValue, currentIndex, array) {
                                return previousValue + currentValue;
                            });
                            var percent = Math.round((currentValue / total) * 100);
                            return data.labels[tooltipItem.index] + ': ' + currentValue + ' (' + percent + '%)';
                        }
                    }
                }
            }
        });
    </script>
{% endblock %}

